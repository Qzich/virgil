<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Virgil.SDK</name>
    </assembly>
    <members>
        <member name="T:Virgil.SDK.Common.ResponseVerifyClient">
            <summary>
            Provides a base implementation of HTTP client for the Virgil Security services which provide response signature.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Common.ResponseVerifyClient.Send``1(Virgil.SDK.Http.IRequest)">
            <summary>
            Performs an asynchronous HTTP POST request.
            Attempts to map the response body to an object of type <typeparamref name="TResult" />
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Virgil.SDK.Common.ResponseVerifyClient.Send(Virgil.SDK.Http.IRequest)">
            <summary>
            Performs an asynchronous HTTP request.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Common.ResponseVerifyClient.#ctor(Virgil.SDK.Http.IConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Common.ResponseVerifyClient"/> class.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:Virgil.SDK.Common.ResponseVerifyClient.#ctor(Virgil.SDK.Http.IConnection,Virgil.SDK.Common.IServiceKeyCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Common.ResponseVerifyClient"/> class.
            </summary>
            <param name="connection">The connection.</param>
            <param name="cache">The service key cache.</param>
        </member>
        <member name="M:Virgil.SDK.Common.ResponseVerifyClient.VerifyResponse(Virgil.SDK.Http.IResponse,System.Byte[])">
            <summary>
            Verifies the HTTP response with specified public key.
            </summary>
            <param name="nativeResponse">An instance of HTTP response.</param>
            <param name="publicKey">A public key to be used for verification.</param>
        </member>
        <member name="T:Virgil.SDK.Common.EndpointClient">
            <summary>
            Provides a base implementation of HTTP client for the Virgil Security services.
            </summary>
        </member>
        <member name="F:Virgil.SDK.Common.EndpointClient.Connection">
            <summary>
            The connection
            </summary>
        </member>
        <member name="F:Virgil.SDK.Common.EndpointClient.EndpointApplicationId">
            <summary>
            The endpoint application identifier
            </summary>
        </member>
        <member name="F:Virgil.SDK.Common.EndpointClient.Cache">
            <summary>
            The cache
            </summary>
        </member>
        <member name="M:Virgil.SDK.Common.EndpointClient.#ctor(Virgil.SDK.Http.IConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Common.EndpointClient" /> class.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:Virgil.SDK.Common.EndpointClient.#ctor(Virgil.SDK.Http.IConnection,Virgil.SDK.Common.IServiceKeyCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Common.EndpointClient" /> class.
            </summary>
            <param name="connection">The connection.</param>
            <param name="cache">The service key cache.</param>
        </member>
        <member name="M:Virgil.SDK.Common.EndpointClient.Send``1(Virgil.SDK.Http.IRequest)">
            <summary>
            Performs an asynchronous HTTP POST request.
            Attempts to map the response body to an object of type <typeparamref name="TResult" />
            </summary>
        </member>
        <member name="M:Virgil.SDK.Common.EndpointClient.Send(Virgil.SDK.Http.IRequest)">
            <summary>
            Performs an asynchronous HTTP request.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Common.IServiceKeyCache">
            <summary>
            Provides cached value of known public key for channel encryption
            </summary>
        </member>
        <member name="M:Virgil.SDK.Common.IServiceKeyCache.GetServiceCard(System.String)">
            <summary>
            Gets the service's public key by specified identifier.
            </summary>
            <param name="servicePublicKeyId">The service's public key identifier.</param>
            <returns>An instance of <see cref="T:Virgil.SDK.Models.CardModel"/>, that represents service card.</returns>
        </member>
        <member name="T:Virgil.SDK.Common.IVirgilService">
            <summary>
            Interface that specifies the Virgil Security service.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Common.ServiceIdentities">
            <summary>
            Holds known Virgil application ids
            </summary>
        </member>
        <member name="F:Virgil.SDK.Common.ServiceIdentities.IdentityService">
            <summary>
            Identity service app id
            </summary>
        </member>
        <member name="F:Virgil.SDK.Common.ServiceIdentities.PrivateService">
            <summary>
            Private key service app id
            </summary>
        </member>
        <member name="F:Virgil.SDK.Common.ServiceIdentities.PublicService">
            <summary>
            Public service app id
            </summary>
        </member>
        <member name="T:Virgil.SDK.Common.DynamicKeyCache">
            <summary>
            Provides cached value of known public key for channel encryption and response verification
            </summary>
            <seealso cref="T:Virgil.SDK.Common.IServiceKeyCache" />
        </member>
        <member name="M:Virgil.SDK.Common.DynamicKeyCache.#ctor(Virgil.SDK.Http.IConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Common.DynamicKeyCache" /> class.
            </summary>
            <param name="connection">The Virgil Public Services connection instance.</param>
        </member>
        <member name="M:Virgil.SDK.Common.DynamicKeyCache.GetServiceCard(System.String)">
            <summary>
            Gets the service's public key by specified identifier.
            </summary>
            <param name="servicePublicKeyId">The service's public key identifier.</param>
            <returns>
            An instance of <see cref="T:Virgil.SDK.Models.PublicKeyModel" />, that represents Public Key.
            </returns>
        </member>
        <member name="T:Virgil.SDK.Exceptions.VerificationRequestIsNotSentException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Virgil.SDK.Exceptions.VerificationRequestIsNotSentException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Exceptions.VerificationRequestIsNotSentException"/> class.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Exceptions.ServiceSignVerificationException">
            <summary>
            Occurs when service response sign is invalid
            </summary>
            <seealso cref="T:Virgil.SDK.Exceptions.VirgilException" />
        </member>
        <member name="M:Virgil.SDK.Exceptions.ServiceSignVerificationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Exceptions.ServiceSignVerificationException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="T:Virgil.SDK.Exceptions.IdentityServiceException">
            <summary>
            Base exception for all Identity Service exceptions
            </summary>
            <seealso cref="T:Virgil.SDK.Exceptions.VirgilException" />
        </member>
        <member name="M:Virgil.SDK.Exceptions.IdentityServiceException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Exceptions.IdentityServiceException"/> class.
            </summary>
            <param name="errorCode">The error code.</param>
            <param name="errorMessage">The error message.</param>
        </member>
        <member name="T:Virgil.SDK.Exceptions.VirgilException">
            <summary>
                Base exception class for all Virgil Services operations
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Virgil.SDK.Exceptions.VirgilException.#ctor(System.Int32,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Virgil.SDK.Exceptions.VirgilException" /> class.
            </summary>
            <param name="errorCode">The error code.</param>
            <param name="errorMessage">The error message.</param>
        </member>
        <member name="M:Virgil.SDK.Exceptions.VirgilException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Virgil.SDK.Exceptions.VirgilException" /> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="P:Virgil.SDK.Exceptions.VirgilException.ErrorCode">
            <summary>
                Gets the error code.
            </summary>
            <value>
                The error code.
            </value>
        </member>
        <member name="T:Virgil.SDK.Exceptions.VirgilPrivateServicesException">
            <summary>
                Private service exception
            </summary>
            <seealso cref="T:Virgil.SDK.Exceptions.VirgilException" />
        </member>
        <member name="M:Virgil.SDK.Exceptions.VirgilPrivateServicesException.#ctor(System.Int32,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Virgil.SDK.Exceptions.VirgilPrivateServicesException" /> class.
            </summary>
            <param name="errorCode">The error code.</param>
            <param name="errorMessage">The error message.</param>
        </member>
        <member name="T:Virgil.SDK.Exceptions.VirgilPublicServicesException">
            <summary>
                Public service exception
            </summary>
            <seealso cref="T:Virgil.SDK.Exceptions.VirgilException" />
        </member>
        <member name="M:Virgil.SDK.Exceptions.VirgilPublicServicesException.#ctor(System.Int32,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Virgil.SDK.Exceptions.VirgilPublicServicesException" /> class.
            </summary>
            <param name="errorCode">The error code.</param>
            <param name="errorMessage">The error message.</param>
        </member>
        <member name="T:Virgil.SDK.Helpers.Ensure">
            <summary>
                Ensure input parameters
            </summary>
        </member>
        <member name="M:Virgil.SDK.Helpers.Ensure.ArgumentNotNull(System.Object,System.String)">
            <summary>
                Checks an argument to ensure it isn't null.
            </summary>
            <param name="value">The argument value to check</param>
            <param name="name">The name of the argument</param>
        </member>
        <member name="M:Virgil.SDK.Helpers.Ensure.ArgumentNotNullOrEmptyString(System.String,System.String)">
            <summary>
                Checks a string argument to ensure it isn't null or empty.
            </summary>
            <param name="value">The argument value to check</param>
            <param name="name">The name of the argument</param>
        </member>
        <member name="T:Virgil.SDK.Identities.IEmailVerifier">
            <summary>
            Represents a class for identity confirmation.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Identities.IEmailVerifier.ActionId">
            <summary>
            Gets the ID of identity verification process.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Identities.IEmailVerifier.Confirm(System.String,System.Int32,System.Int32)">
            <summary>
            Confirms the identity using confirmation code, that has been generated to confirm an identity.
            </summary>
            <param name="code">The confirmation code that was recived on email box.</param>
            <param name="timeToLive">
            The parameter is used to limit the lifetime of the token in seconds 
            (maximum value is 60 * 60 * 24 * 365 = 1 year)
            </param>
            <param name="countToLive">
            The parameter is used to restrict the number of token 
            usages (maximum value is 100)
            </param>
        </member>
        <member name="T:Virgil.SDK.Identities.VerifiableIdentityType">
            <summary>
            Represents a supported identity type that Virgil Service are able to verify.
            </summary>
        </member>
        <member name="F:Virgil.SDK.Identities.VerifiableIdentityType.Email">
            <summary>
            The email identity type
            </summary>
        </member>
        <member name="T:Virgil.SDK.Identities.IdentityConfirmationResponse">
            <summary>
            Represents an confirmed identity information.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Identities.IdentityConfirmationResponse.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Identities.IdentityConfirmationResponse.Type">
            <summary>
            Gets or sets the type.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Identities.IdentityConfirmationResponse.ValidationToken">
            <summary>
            Gets or sets the validation token.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Identities.IdentityClient">
            <summary>
            Provides common methods for validating and authorization a different types of identities.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Identities.IdentityClient.#ctor(Virgil.SDK.Http.IConnection,Virgil.SDK.Common.IServiceKeyCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Identities.IdentityClient"/> class.
            </summary>
            <param name="connection">The connection.</param>
            <param name="cache">The cache.</param>
        </member>
        <member name="M:Virgil.SDK.Identities.IdentityClient.Verify(System.String,Virgil.SDK.Identities.VerifiableIdentityType,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Sends the request for identity verification, that's will be processed depending of specified type.
            </summary>
            <param name="identityValue">An unique string that represents identity.</param>
            <param name="identityType">The type of identity.</param>
            <param name="extraFields"></param>
            <remarks>
            Use method <see cref="M:Virgil.SDK.Identities.IdentityClient.Confirm(System.Guid,System.String,System.Int32,System.Int32)" /> to confirm and get the indentity token.
            </remarks>
        </member>
        <member name="M:Virgil.SDK.Identities.IdentityClient.Confirm(System.Guid,System.String,System.Int32,System.Int32)">
            <summary>
            Confirms the identity using confirmation code, that has been generated to confirm an identity.
            </summary>
            <param name="actionId">The action identifier that was obtained on verification step.</param>
            <param name="code">The confirmation code that was recived on email box.</param>
            <param name="timeToLive">
            The parameter is used to limit the lifetime of the token in seconds 
            (maximum value is 60 * 60 * 24 * 365 = 1 year)
            </param>
            <param name="countToLive">
            The parameter is used to restrict the number of token 
            usages (maximum value is 100)
            </param>
        </member>
        <member name="M:Virgil.SDK.Identities.IdentityClient.IsValid(System.String,Virgil.SDK.Identities.VerifiableIdentityType,System.String)">
            <summary>
            Returns true if validation token is valid.
            </summary>
            <param name="identityValue">The type of identity.</param>
            <param name="identityType">The identity value.</param>
            <param name="validationToken">The validation token.</param>
        </member>
        <member name="M:Virgil.SDK.Identities.IdentityClient.VerifyEmail(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initiates a process to verify a specified email address.
            </summary>
            <param name="emailAddress">
            The email address you are going to verify.
            </param>
            <param name="extraFields">
            In some cases it could be necessary to pass some parameters and receive them back 
            in an email. For this special case an optional <c>extraFields</c> dictionary can be used. 
            All values passed in <c>extraFields</c> parameter will be passed back in an email 
            in a hidden form with extra hidden fields.
            </param>
            <returns>The verification identuty class</returns>
        </member>
        <member name="T:Virgil.SDK.Identities.IIdentityClient">
            <summary>
            Interface that specifies communication with Virgil Security Identity service.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Identities.IIdentityClient.Verify(System.String,Virgil.SDK.Identities.VerifiableIdentityType,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Sends the request for identity verification, that's will be processed depending of specified type.
            </summary>
            <param name="identityValue">An unique string that represents identity.</param>
            <param name="identityType">The identity type that going to be verified.</param>
            <param name="extraFields"></param>
            <remarks>
            Use method <see cref="M:Virgil.SDK.Identities.IIdentityClient.Confirm(System.Guid,System.String,System.Int32,System.Int32)" /> to confirm and get the indentity token.
            </remarks>
        </member>
        <member name="M:Virgil.SDK.Identities.IIdentityClient.Confirm(System.Guid,System.String,System.Int32,System.Int32)">
            <summary>
            Confirms the identity using confirmation code, that has been generated to confirm an identity.
            </summary>
            <param name="actionId">The action identifier.</param>
            <param name="code">The confirmation code.</param>
            <param name="timeToLive">The time to live.</param>
            <param name="countToLive">The count to live.</param>
        </member>
        <member name="M:Virgil.SDK.Identities.IIdentityClient.IsValid(System.String,Virgil.SDK.Identities.VerifiableIdentityType,System.String)">
            <summary>
            Checks whether the validation token is valid for specified identity.
            </summary>
            <param name="identityValue">The type of identity.</param>
            <param name="identityType">The identity value.</param>
            <param name="validationToken">
            The string value that represents validation token for Virgil Identity Service.
            </param>
        </member>
        <member name="M:Virgil.SDK.Identities.IIdentityClient.VerifyEmail(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initiates a process to verify a specified email address.
            </summary>
            <param name="emailAddress">
            The email address you are going to verify.
            </param>
            <param name="extraFields">
            In some cases it could be necessary to pass some parameters and receive them back 
            in an email. For this special case an optional <c>extraFields</c> dictionary can be used. 
            All values passed in <c>extraFields</c> parameter will be passed back in an email 
            in a hidden form with extra hidden fields.
            </param>
            <returns>The verification identuty class</returns>
        </member>
        <member name="T:Virgil.SDK.Identities.IdentityInfo">
            <summary>
            Represents an identity information.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Identities.IdentityInfo.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Identities.IdentityInfo.Type">
            <summary>
            Gets or sets the type.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Identities.IdentityInfo.ValidationToken">
            <summary>
            Gets or sets the validation token.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Identities.EmailVerifier">
            <summary>
            Represents a class for email address verification.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Identities.EmailVerifier.#ctor(System.Guid,Virgil.SDK.Identities.IIdentityClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Identities.EmailVerifier"/> class.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Identities.EmailVerifier.ActionId">
            <summary>
            Gets the verification process ID.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Identities.EmailVerifier.Confirm(System.String,System.Int32,System.Int32)">
            <summary>
            Confirms the identity using confirmation code, that has been generated to confirm an identity.
            </summary>
            <param name="code">The confirmation code that was recived on email box.</param>
            <param name="timeToLive">
            The parameter is used to limit the lifetime of the token in seconds 
            (maximum value is 60 * 60 * 24 * 365 = 1 year)
            </param>
            <param name="countToLive">
            The parameter is used to restrict the number of token 
            usages (maximum value is 100)
            </param>
        </member>
        <member name="T:Virgil.SDK.Identities.IdentityType">
            <summary>
            Represents identity type
            </summary>
        </member>
        <member name="F:Virgil.SDK.Identities.IdentityType.Email">
            <summary>
            The email identity type
            </summary>
        </member>
        <member name="F:Virgil.SDK.Identities.IdentityType.Application">
            <summary>
            The application identity type
            </summary>
        </member>
        <member name="T:Virgil.SDK.Identities.IdentityVerificationResponse">
            <summary>
            Represents virgil verify response
            </summary>
        </member>
        <member name="P:Virgil.SDK.Identities.IdentityVerificationResponse.ActionId">
            <summary>
            Gets or sets the action identifier.
            </summary>
            <value>
            The action identifier.
            </value>
        </member>
        <member name="T:Virgil.SDK.ServiceHubConfig">
            <summary>
            Represents a configuration file that is applicable to a particular <see cref="T:Virgil.SDK.ServiceHub"/>. 
            This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHubConfig.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.ServiceHubConfig"/> class.
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHubConfig.WithPublicServicesAddress(System.String)">
            <summary>
            Overrides default Virgil Public Keys service address.  
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHubConfig.WithPrivateServicesAddress(System.String)">
            <summary>
            Overrides default Virgil Private Keys service address.  
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHubConfig.WithIdentityServiceAddress(System.String)">
            <summary>
            Overrides default Virgil Identity service address.  
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHubConfig.WithStagingEnvironment">
            <summary>
            Initializes Virgil Securtity services with staging urls.
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHubConfig.UseAccessToken(System.String)">
            <summary>
            Sets the application token to access to the Virgil Security services. This token has to 
            be generated with application private key on Virgil Security portal or manually with SDK Utils.
            </summary>
        </member>
        <member name="T:Virgil.SDK.PrivateKeys.IPrivateKeysClient">
            <summary>
            Provides common methods to interact with Private Keys resource endpoints.
            </summary>
        </member>
        <member name="M:Virgil.SDK.PrivateKeys.IPrivateKeysClient.Stash(System.Guid,System.Byte[],System.String)">
            <summary>
            Uploads private key to private key store.
            </summary>
            <param name="cardId">The public key identifier.</param>
            <param name="privateKey">The private key value. Private key is used to produce sign. It is not transfered over network</param>
            <param name="privateKeyPassword">The private key password.</param>
        </member>
        <member name="M:Virgil.SDK.PrivateKeys.IPrivateKeysClient.Get(System.Guid,Virgil.SDK.Identities.IdentityInfo)">
            <summary>
            Downloads private part of key by its public id.
            </summary>
            <param name="cardId">The public key identifier.</param>
            <param name="identityInfo"></param>
            <remarks>Random password will be generated to encrypt server response</remarks>
        </member>
        <member name="M:Virgil.SDK.PrivateKeys.IPrivateKeysClient.Get(System.Guid,Virgil.SDK.Identities.IdentityInfo,System.String)">
            <summary>
            Downloads private part of key by its public id.
            </summary>
            <param name="cardId">The public key identifier.</param>
            <param name="identityInfo"></param>
            <param name="responsePassword"></param>
        </member>
        <member name="M:Virgil.SDK.PrivateKeys.IPrivateKeysClient.Destroy(System.Guid,System.Byte[],System.String)">
            <summary>
            Deletes the private key from service by specified card ID.
            </summary>
            <param name="cardId">The public key identifier.</param>
            <param name="privateKey">The private key value. Private key is used to produce sign. It is not transfered over network</param>
            <param name="privateKeyPassword">The private key password.</param>
        </member>
        <member name="T:Virgil.SDK.PrivateKeys.PrivateKeysClient">
            <summary>
            Provides common methods to interact with Private Keys resource endpoints.
            </summary>
            <seealso cref="T:Virgil.SDK.Common.EndpointClient" />
            <seealso cref="T:Virgil.SDK.PrivateKeys.IPrivateKeysClient" />
        </member>
        <member name="M:Virgil.SDK.PrivateKeys.PrivateKeysClient.#ctor(Virgil.SDK.Http.IConnection,Virgil.SDK.Common.IServiceKeyCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.PrivateKeys.PrivateKeysClient" /> class.
            </summary>
            <param name="connection">The connection.</param>
            <param name="cache">The known key provider.</param>
        </member>
        <member name="T:Virgil.SDK.Cards.ICardsClient">
            <summary>
            Provides common methods to interact with Public Keys resource endpoints.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Cards.ICardsClient.Create(Virgil.SDK.Identities.IdentityInfo,System.Guid,System.Byte[],System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new card with specified identity and existing public key.
            </summary>
            <param name="identityInfo">The information about identity.</param>
            <param name="publicKeyId">The public key identifier in Virgil Services.</param>
            <param name="privateKey">
            The private key. Private key is used to produce sign. It is not transfered over network
            </param>
            <param name="privateKeyPassword">
            The private key password. Pass this parameter if your private key is encrypted with password</param>
            <param name="customData">
            The dictionary of key/value pairs with custom values that can be used by different applications
            </param>
        </member>
        <member name="M:Virgil.SDK.Cards.ICardsClient.Create(Virgil.SDK.Identities.IdentityInfo,System.Byte[],System.Byte[],System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new card with specified identity and public key.
            </summary>
            <param name="identityInfo">The information about identity.</param>
            <param name="publicKey">The generated public key value.</param>
            <param name="privateKey">
            The private key. Private key is used to produce sign. It is not transfered over network
            </param>
            <param name="privateKeyPassword">
            The private key password. Pass this parameter if your private key is encrypted with password</param>
            <param name="customData">
            The dictionary of key/value pairs with custom values that can be used by different applications
            </param>
        </member>
        <member name="M:Virgil.SDK.Cards.ICardsClient.Search(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Searches the private cards by specified criteria.
            </summary>
            <param name="identityValue">The value of identifier. Required.</param>
            <param name="identityType">The value of identity type. Optional.</param>
            <param name="includeUnauthorized">
            The request parameter specifies whether an unconfirmed Virgil Cards 
            should be included in the search result.
            </param>
            <returns>The collection of Virgil Cards.</returns>
        </member>
        <member name="M:Virgil.SDK.Cards.ICardsClient.Search(System.String,Virgil.SDK.Identities.IdentityType)">
            <summary>
            Searches the global cards by specified criteria.
            </summary>
            <param name="identityValue">The value of identifier. Required.</param>
            <param name="identityType">The type of identifier. Optional.</param>
            <returns>The collection of Virgil Cards.</returns>
        </member>
        <member name="M:Virgil.SDK.Cards.ICardsClient.Get(System.Guid)">
            <summary>
            Gets the card by ID.
            </summary>
            <param name="cardId">The card ID.</param>
            <returns>Virgil card model.</returns>
        </member>
        <member name="M:Virgil.SDK.Cards.ICardsClient.Revoke(System.Guid,Virgil.SDK.Identities.IdentityInfo,System.Byte[],System.String)">
            <summary>
            Revokes the specified public key.
            </summary>
            <param name="cardId">The card ID.</param>
            <param name="identityInfo">Validation identityInfo for card's identity.</param>
            <param name="privateKey">The private key. Private key is used to produce sign. It is not transfered over network</param>
            <param name="privateKeyPassword">The private key password.</param>
        </member>
        <member name="M:Virgil.SDK.Cards.ICardsClient.GetCardsRealtedToThePublicKey(System.Guid,System.Guid,System.Byte[],System.String)">
            <summary>
            Gets the cards by specified public key.
            </summary>
            <param name="publicKeyId">The public key identifier.</param>
            <param name="cardId">The private/public keys associated card identifier.</param>
            <param name="privateKey">The private key. Private key is used to produce sign. 
            It is not transfered over network</param>
            <param name="privateKeyPassword">The private key password.</param>
        </member>
        <member name="T:Virgil.SDK.Cards.CardsClient">
            <summary>
            Provides common methods to interact with Virgil Card resource endpoints.
            </summary>
            <seealso cref="T:Virgil.SDK.Common.EndpointClient" />
            <seealso cref="T:Virgil.SDK.Cards.ICardsClient" />
        </member>
        <member name="M:Virgil.SDK.Cards.CardsClient.#ctor(Virgil.SDK.Http.IConnection,Virgil.SDK.Common.IServiceKeyCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Cards.CardsClient" /> class.
            </summary>
            <param name="connection">The connection.</param>
            <param name="cache">The services key cache.</param>
        </member>
        <member name="M:Virgil.SDK.Cards.CardsClient.Create(Virgil.SDK.Identities.IdentityInfo,System.Guid,System.Byte[],System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new card with specified identity and existing public key.
            </summary>
            <param name="identityInfo">The information about identity.</param>
            <param name="publicKeyId">The public key identifier in Virgil Services.</param>
            <param name="privateKey">
            The private key. Private key is used to produce sign. It is not transfered over network
            </param>
            <param name="privateKeyPassword">
            The private key password. Pass this parameter if your private key is encrypted with password</param>
            <param name="customData">
            The dictionary of key/value pairs with custom values that can be used by different applications
            </param>
        </member>
        <member name="M:Virgil.SDK.Cards.CardsClient.Create(Virgil.SDK.Identities.IdentityInfo,System.Byte[],System.Byte[],System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new card with specified identity and public key.
            </summary>
            <param name="identityInfo">The information about identity.</param>
            <param name="publicKey">The generated public key value.</param>
            <param name="privateKey">
            The private key. Private key is used to produce sign. It is not transfered over network
            </param>
            <param name="privateKeyPassword">
            The private key password. Pass this parameter if your private key is encrypted with password</param>
            <param name="customData">
            The dictionary of key/value pairs with custom values that can be used by different applications
            </param>
        </member>
        <member name="M:Virgil.SDK.Cards.CardsClient.Search(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Searches the private cards by specified criteria.
            </summary>
            <param name="identityValue">The value of identifier.</param>
            <param name="identityType">The type of identifier.</param>
            <param name="includeUnauthorized">Unconfirmed Virgil cards will be included in output. Optional</param>
            <returns>The collection of Virgil Cards.</returns>
        </member>
        <member name="M:Virgil.SDK.Cards.CardsClient.Search(System.String,Virgil.SDK.Identities.IdentityType)">
            <summary>
            Searches the global cards by specified criteria.
            </summary>
            <param name="identityValue">The value of identifier.</param>
            <param name="identityType">The type of identifier.</param>
            <returns>The collection of Virgil Cards.</returns>
        </member>
        <member name="M:Virgil.SDK.Cards.CardsClient.GetCardsRealtedToThePublicKey(System.Guid,System.Guid,System.Byte[],System.String)">
            <summary>
            Gets the cards by specified public key.
            </summary>
            <param name="publicKeyId">The public key identifier.</param>
            <param name="cardId">The private/public keys associated card identifier.</param>
            <param name="privateKey">The private key. Private key is used to produce sign. 
            It is not transfered over network</param>
            <param name="privateKeyPassword">The private key password.</param>
        </member>
        <member name="M:Virgil.SDK.Cards.CardsClient.Get(System.Guid)">
            <summary>
            Gets the card by ID.
            </summary>
            <param name="cardId">The card ID.</param>
            <returns>Virgil card model.</returns>
        </member>
        <member name="M:Virgil.SDK.Cards.CardsClient.Revoke(System.Guid,Virgil.SDK.Identities.IdentityInfo,System.Byte[],System.String)">
            <summary>
            Revokes the specified public key.
            </summary>
            <param name="cardId">The card ID.</param>
            <param name="identityInfo">Validation token for card's identity.</param>
            <param name="privateKey">The private key. Private key is used to produce sign. It is not transfered over network</param>
            <param name="privateKeyPassword">The private key password.</param>
        </member>
        <member name="T:Virgil.SDK.PublicKeys.PublicKeysClient">
            <summary>
            Provides common methods to interact with Public Keys resource endpoints.
            </summary>
        </member>
        <member name="M:Virgil.SDK.PublicKeys.PublicKeysClient.#ctor(Virgil.SDK.Http.IConnection,Virgil.SDK.Common.IServiceKeyCache)">
            <summary>
                Initializes a new instance of the <see cref="T:Virgil.SDK.PublicKeys.PublicKeysClient" /> class.
            </summary>
            <param name="connection">The connection.</param>
            <param name="cache">The service keys cache.</param>
        </member>
        <member name="T:Virgil.SDK.PublicKeys.IPublicKeysClient">
            <summary>
            Provides common methods to interact with Public Keys resource endpoints.
            </summary>
        </member>
        <member name="M:Virgil.SDK.PublicKeys.IPublicKeysClient.Get(System.Guid)">
            <summary>
            Gets the specified public key by it identifier.
            </summary>
            <param name="publicKeyId">The public key identifier.</param>
            <returns>Public key dto</returns>
        </member>
        <member name="M:Virgil.SDK.PublicKeys.IPublicKeysClient.Revoke(System.Guid,System.Collections.Generic.IEnumerable{Virgil.SDK.Identities.IdentityInfo},System.Guid,System.Byte[],System.String)">
            <summary>
            Revoke a  Public Key  endpoint. To revoke the  Public Key  it's mandatory to pass validation tokens obtained on  Virgil Identity  service for all confirmed  Virgil Cards  for this  Public Key .
            </summary>
            <param name="publicKeyId">The public key ID to be revoked.</param>
            <param name="identityInfos">The list of confirmed identities with associated with this public key.</param>
            <param name="cardId">The private/public keys associated card identifier</param>
            <param name="privateKey">The private key.</param>
            <param name="privateKeyPassword">The private key password</param>
        </member>
        <member name="T:Virgil.SDK.Utils.Obfuscator">
            <summary>
            Provides a helper methods to obfuscate the data.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Utils.Obfuscator.Process(System.String,System.String,Virgil.Crypto.Foundation.VirgilPBKDF.Hash,System.UInt32)">
            <summary>
            Derives the obfuscated data from incoming parameters using PBKDF function.
            </summary>
            <param name="value">The string value to be hashed.</param>
            <param name="algorithm">The hash algorithm <see cref="T:Virgil.Crypto.Foundation.VirgilPBKDF.Hash"/> type.</param>
            <param name="iterations">The count of iterations.</param>
            <param name="salt">The hash salt.</param>
        </member>
        <member name="T:Virgil.SDK.Utils.ValidationTokenGenerator">
            <summary>
            Provides a helper methods to generate validation token based on application's private key.  
            </summary>
        </member>
        <member name="M:Virgil.SDK.Utils.ValidationTokenGenerator.Generate(System.String,System.String,System.Byte[],System.String)">
            <summary>
            Generates the validation token based on application's private key. 
            </summary>
            <param name="identityValue">The identity value.</param>
            <param name="identityType">The type of the identity.</param>
            <param name="privateKey">The application's private key.</param>
            <param name="privateKeyPassword">The private key password.</param>
            <returns></returns>
        </member>
        <member name="M:Virgil.SDK.Utils.ValidationTokenGenerator.Generate(System.Guid,System.String,System.String,System.Byte[],System.String)">
            <summary>
            Generates the validation token based on application's private key. 
            </summary>
            <param name="identityValue">The identity value.</param>
            <param name="identityType">The type of the identity.</param>
            <param name="privateKey">The application's private key.</param>
            <param name="privateKeyPassword">The private key password.</param>
            <returns></returns>
        </member>
        <member name="T:Virgil.SDK.Http.ConnectionBase">
            <summary>
            </summary>
        </member>
        <member name="F:Virgil.SDK.Http.ConnectionBase.Errors">
            <summary>
            The error code to message mapping dictionary
            </summary>
        </member>
        <member name="F:Virgil.SDK.Http.ConnectionBase.AccessTokenHeaderName">
            <summary>
                The access token header name
            </summary>
        </member>
        <member name="M:Virgil.SDK.Http.ConnectionBase.#ctor(System.String,System.Uri)">
            <summary>
                Initializes a new instance of the <see cref="T:Virgil.SDK.Http.ConnectionBase" /> class.
            </summary>
            <param name="accessToken">The application token.</param>
            <param name="baseAddress">The base address.</param>
        </member>
        <member name="P:Virgil.SDK.Http.ConnectionBase.AccessToken">
            <summary>
                Access Token
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.ConnectionBase.BaseAddress">
            <summary>
                Base address for the connection.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Http.ConnectionBase.Send(Virgil.SDK.Http.IRequest)">
            <summary>
                Sends an HTTP request to the API.
            </summary>
            <param name="request">The HTTP request details.</param>
            <returns></returns>
        </member>
        <member name="M:Virgil.SDK.Http.ConnectionBase.GetNativeRequest(Virgil.SDK.Http.IRequest)">
            <summary>
                Produces native HTTP request.
            </summary>
            <param name="request">The request.</param>
            <returns>HttpRequestMessage</returns>
        </member>
        <member name="M:Virgil.SDK.Http.ConnectionBase.ExceptionHandler(System.Net.Http.HttpResponseMessage)">
            <summary>
                Handles exception responses
            </summary>
            <param name="message">The http response message.</param>
        </member>
        <member name="M:Virgil.SDK.Http.ConnectionBase.TryParseErrorCode(System.String)">
            <summary>
            Parses service response to retrieve error code
            </summary>
            <param name="content">Http body of service response</param>
            <returns>Parsed error code</returns>
        </member>
        <member name="M:Virgil.SDK.Http.ConnectionBase.ThrowException``1(System.Net.Http.HttpResponseMessage,System.Func{System.Int32,System.String,``0})">
            <summary>
            Parses service http response and throws apropriate exception
            </summary>
            <param name="message">Message received from service</param>
            <param name="exception">Exception factory</param>
            <typeparam name="T">Virgil exception child class</typeparam>
        </member>
        <member name="T:Virgil.SDK.Http.IdentityConnection">
            <summary>
            A connection for making HTTP requests against URI endpoints for identity api services.
            </summary>
            <seealso cref="T:Virgil.SDK.Http.ConnectionBase" />
            <seealso cref="T:Virgil.SDK.Http.IConnection" />
        </member>
        <member name="M:Virgil.SDK.Http.IdentityConnection.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Http.IdentityConnection"/> class.
            </summary>
            <param name="baseAddress">The base address.</param>
        </member>
        <member name="M:Virgil.SDK.Http.IdentityConnection.ExceptionHandler(System.Net.Http.HttpResponseMessage)">
            <summary>
            Handles exception responses
            </summary>
            <param name="message">The http response message.</param>
        </member>
        <member name="T:Virgil.SDK.Http.PrivateKeysConnection">
            <summary>
                A connection for making HTTP requests against URI endpoints for public keys service.
            </summary>
            <seealso cref="T:Virgil.SDK.Http.ConnectionBase" />
            <seealso cref="T:Virgil.SDK.Http.IConnection" />
        </member>
        <member name="M:Virgil.SDK.Http.PrivateKeysConnection.#ctor(System.String,System.Uri)">
            <summary>
                Initializes a new instance of the <see cref="T:Virgil.SDK.Http.PrivateKeysConnection" /> class.
            </summary>
            <param name="accessToken">Application token</param>
            <param name="baseAddress">The base address.</param>
        </member>
        <member name="M:Virgil.SDK.Http.PrivateKeysConnection.ExceptionHandler(System.Net.Http.HttpResponseMessage)">
            <summary>
                Handles private keys service exception responses
            </summary>
            <param name="message">The http response message.</param>
        </member>
        <member name="T:Virgil.SDK.Http.RequestExtensions">
            <summary>
            Extensions to help construct http requests
            </summary>
        </member>
        <member name="M:Virgil.SDK.Http.RequestExtensions.WithEndpoint(Virgil.SDK.Http.Request,System.String)">
            <summary>
            Sets the request enpoint
            </summary>
            <param name="request">The request.</param>
            <param name="endpoint">The endpoint.</param>
            <returns><see cref="T:Virgil.SDK.Http.Request"/></returns>
        </member>
        <member name="M:Virgil.SDK.Http.RequestExtensions.WithBody(Virgil.SDK.Http.Request,System.Object)">
            <summary>
            Withes the body.
            </summary>
            <param name="request">The request.</param>
            <param name="body">The body.</param>
            <returns><see cref="T:Virgil.SDK.Http.Request"/></returns>
        </member>
        <member name="M:Virgil.SDK.Http.RequestExtensions.SignRequest(Virgil.SDK.Http.Request,System.Guid,System.Byte[],System.String)">
            <summary>
            Signs the request.
            </summary>
            <param name="request">The request.</param>
            <param name="cardId">The card identifier.</param>
            <param name="privateKey">The private key.</param>
            <param name="privateKeyPassword">The private key password.</param>
            <returns><see cref="T:Virgil.SDK.Http.Request"/></returns>
        </member>
        <member name="M:Virgil.SDK.Http.RequestExtensions.SignRequest(Virgil.SDK.Http.Request,System.Byte[],System.String)">
            <summary>
            Signs the request.
            </summary>
            <param name="request">The request.</param>
            <param name="privateKey">The private key.</param>
            <param name="privateKeyPassword">The private key password.</param>
            <returns><see cref="T:Virgil.SDK.Http.Request"/></returns>
        </member>
        <member name="M:Virgil.SDK.Http.RequestExtensions.EncryptJsonBody(Virgil.SDK.Http.Request,Virgil.SDK.Models.CardModel)">
            <summary>
            Encrypts the json body.
            </summary>
            <param name="request">The request.</param>
            <param name="card">The Virgil Card dto.</param>
            <returns><see cref="T:Virgil.SDK.Http.Request"/></returns>
        </member>
        <member name="T:Virgil.SDK.Http.PublicServiceConnection">
            <summary>
                A connection for making HTTP requests against URI endpoints for public api services.
            </summary>
            <seealso cref="T:Virgil.SDK.Http.ConnectionBase" />
            <seealso cref="T:Virgil.SDK.Http.IConnection" />
        </member>
        <member name="M:Virgil.SDK.Http.PublicServiceConnection.#ctor(System.String,System.Uri)">
            <summary>
                Initializes a new instance of the <see cref="T:Virgil.SDK.Http.PublicServiceConnection" /> class.
            </summary>
            <param name="accessToken">Application token</param>
            <param name="baseAddress">The base address.</param>
        </member>
        <member name="M:Virgil.SDK.Http.PublicServiceConnection.ExceptionHandler(System.Net.Http.HttpResponseMessage)">
            <summary>
                Handles public keys service exception responses
            </summary>
            <param name="message">The http response message.</param>
        </member>
        <member name="T:Virgil.SDK.Http.Request">
            <summary>
            <see cref="T:Virgil.SDK.Http.IRequest" /> default implementation"/>
            </summary>
            <seealso cref="T:Virgil.SDK.Http.IRequest" />
        </member>
        <member name="M:Virgil.SDK.Http.Request.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Http.Request"/> class.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.Request.Endpoint">
            <summary>
            Gets the endpoint. Does not include server base address
            </summary>
            <value>
            The endpoint.
            </value>
        </member>
        <member name="P:Virgil.SDK.Http.Request.Body">
            <summary>
            Gets the requests body.
            </summary>
            <value>
            The body.
            </value>
        </member>
        <member name="P:Virgil.SDK.Http.Request.Headers">
            <summary>
            Gets the http headers.
            </summary>
            <value>
            The headers.
            </value>
        </member>
        <member name="P:Virgil.SDK.Http.Request.Method">
            <summary>
            Gets the request method.
            </summary>
            <value>
            The method.
            </value>
        </member>
        <member name="T:Virgil.SDK.Http.RequestMethod">
            <summary>
            Represents HTTP request methods
            </summary>
        </member>
        <member name="T:Virgil.SDK.Http.Response">
            <summary>
            <see cref="T:Virgil.SDK.Http.IResponse"/> default implementation
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.Response.Body">
            <summary>
            Raw response body.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.Response.Headers">
            <summary>
            Information about the API.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.Response.StatusCode">
            <summary>
            The response status code.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Http.IConnection">
            <summary>
                A connection for making HTTP requests against URI endpoints.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.IConnection.BaseAddress">
            <summary>
                Base address for the connection.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Http.IConnection.Send(Virgil.SDK.Http.IRequest)">
            <summary>
                Sends an HTTP request to the API.
            </summary>
            <param name="request">The HTTP request details.</param>
        </member>
        <member name="T:Virgil.SDK.Http.IRequest">
            <summary>
            Represent a generic HTTP request 
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.IRequest.Endpoint">
            <summary>
                Gets the endpoint. Does not include server base address
            </summary>
            <value>
                The endpoint.
            </value>
        </member>
        <member name="P:Virgil.SDK.Http.IRequest.Method">
            <summary>
                Gets the request method.
            </summary>
            <value>
                The method.
            </value>
        </member>
        <member name="P:Virgil.SDK.Http.IRequest.Headers">
            <summary>
                Gets the http headers.
            </summary>
            <value>
                The headers.
            </value>
        </member>
        <member name="P:Virgil.SDK.Http.IRequest.Body">
            <summary>
                Gets the requests body.
            </summary>
            <value>
                The body.
            </value>
        </member>
        <member name="T:Virgil.SDK.Http.IResponse">
            <summary>
                Represents a generic HTTP response
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.IResponse.Body">
            <summary>
                Raw response body.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.IResponse.Headers">
            <summary>
                Information about the API.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.IResponse.StatusCode">
            <summary>
                The response status code.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Localization">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionDomainValueDomainIdentityIsInvalid">
            <summary>
              Looks up a localized string similar to Domain value specified for the domain identity is invalid.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionIdentityVerificationIsNotSent">
            <summary>
              Looks up a localized string similar to Identity verification request is not sent.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionPublicKeyNotFound">
            <summary>
              Looks up a localized string similar to Public Key is not found.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionStringCanNotBeEmpty">
            <summary>
              Looks up a localized string similar to String can not be empty.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionStringLengthIsInvalid">
            <summary>
              Looks up a localized string similar to String parameter should have length less than {0}.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataAlreadyExists">
            <summary>
              Looks up a localized string similar to User data with same fields is already exists..
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataClassSpecifiedIsInvalid">
            <summary>
              Looks up a localized string similar to User Data class specified is invalid.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataConfirmationEntityNotFound">
            <summary>
              Looks up a localized string similar to User Data confirmation entity not found.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataConfirmationTokenInvalid">
            <summary>
              Looks up a localized string similar to User Data confirmation identityInfo invalid.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataIntegrityConstraintViolation">
            <summary>
              Looks up a localized string similar to User Data integrity constraint violation.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataIsNotConfirmedYet">
            <summary>
              Looks up a localized string similar to The user data is not confirmed yet.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataNotFound">
            <summary>
              Looks up a localized string similar to User data is not found.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataValueIsRequired">
            <summary>
              Looks up a localized string similar to The user data value is required.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataWasAlreadyConfirmed">
            <summary>
              Looks up a localized string similar to User Data was already confirmed and does not need further confirmation.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserIdHadBeenConfirmed">
            <summary>
              Looks up a localized string similar to This user id had been confirmed earlier.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserInfoDataValidationFailed">
            <summary>
              Looks up a localized string similar to User info data validation failed.
            </summary>
        </member>
        <member name="T:Virgil.SDK.ServiceHub">
            <summary>
            Represents all exposed virgil services
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHub.#ctor(Virgil.SDK.ServiceHubConfig)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.ServiceHub"/> class.
            </summary>
        </member>
        <member name="P:Virgil.SDK.ServiceHub.PublicKeys">
            <summary>
            Gets a client that handle requests for <c>PublicKey</c> resources.
            </summary>
        </member>
        <member name="P:Virgil.SDK.ServiceHub.PrivateKeys">
            <summary>
            Gets a client that handle requests for <c>PrivateKey</c> resources.
            </summary>
        </member>
        <member name="P:Virgil.SDK.ServiceHub.Cards">
            <summary>
            Gets a client that handle requests for <c>Card</c> resources.
            </summary>
        </member>
        <member name="P:Virgil.SDK.ServiceHub.Identity">
            <summary>
            Gets a client that handle requests Identity service resources.
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHub.Create(System.String)">
            <summary>
            Creates new <see cref="T:Virgil.SDK.ServiceHub"/> instances with default configuration 
            for specified access token.
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHub.Create(Virgil.SDK.ServiceHubConfig)">
            <summary>
            Creates new <see cref="T:Virgil.SDK.ServiceHub"/> instances with default configuration 
            for specified configuration.
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHub.Initialize">
            <summary>
            Initializes an implementation of the ServiceHub class.
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHub.BuildPrivateKeysClient">
            <summary>
            Builds a Private Key client instance.
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHub.BuildCardsClient">
            <summary>
            Builds a Cards client instance.
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHub.BuildIdentityClient">
            <summary>
            Builds a Identity Service client instance.
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHub.BuildPublicKeysClient">
            <summary>
            Builds a Public Key client instance.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Models.PrivateKeyModel">
            <summary>
            Represents private key service grab response
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.PrivateKeyModel.CardId">
            <summary>
            Gets or sets the virgil card identifier.
            </summary>
            <value>
            The virgil card identifier.
            </value>
        </member>
        <member name="P:Virgil.SDK.Models.PrivateKeyModel.PrivateKey">
            <summary>
            Gets or sets the private key.
            </summary>
            <value>
            The private key.
            </value>
        </member>
        <member name="T:Virgil.SDK.Models.SignModel">
            <summary>
            Represents trust card response
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.SignModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.SignModel.CreatedAt">
            <summary>
            Gets or sets the created at date.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.SignModel.SignerCardId">
            <summary>
            Gets or sets the signer virgil card identifier.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.SignModel.SignedCardId">
            <summary>
            Gets or sets the signed virgil card identifier.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.SignModel.SignedDigest">
            <summary>
            Gets or sets the signed digest.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Models.PublicKeyExtendedResponse">
            <summary>
            Represents an information about public key's cards.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.PublicKeyExtendedResponse.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.PublicKeyExtendedResponse.CreatedAt">
            <summary>
            Gets or sets the created at date.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.PublicKeyExtendedResponse.Value">
            <summary>
            Gets or sets the public key.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.PublicKeyExtendedResponse.Cards">
            <summary>
            Gets or sets the virgil cards.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Models.PublicKeyModel">
            <summary>
            Represent public key object returned from virgil public keys service
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.PublicKeyModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.PublicKeyModel.CreatedAt">
            <summary>
            Gets or sets the created at date.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.PublicKeyModel.Value">
            <summary>
            Gets or sets the public key.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Models.CardModel">
            <summary>
            Represents full virgil card object returned from virgil cards service
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.CardModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.CardModel.CreatedAt">
            <summary>
            Gets or sets the created at date.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.CardModel.AuthorizedBy">
            <summary>
            Gets or sets a value indicating whether this instance is confirmed.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.CardModel.Hash">
            <summary>
            Gets or sets the hash.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.CardModel.Identity">
            <summary>
            Gets or sets the identity.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.CardModel.CustomData">
            <summary>
            Gets or sets the custom data.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.CardModel.PublicKey">
            <summary>
            Gets or sets the public key.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Models.IdentityModel">
            <summary>
            Represents identity object returned from virgil services
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.IdentityModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.IdentityModel.CreatedAt">
            <summary>
            Gets or sets the created at date.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.IdentityModel.Type">
            <summary>
            Gets or sets the type.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.IdentityModel.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
    </members>
</doc>
